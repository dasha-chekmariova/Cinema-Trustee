{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Cinema-Trustee/cinema-trustee/src/components/main/service/Service.jsx\";\nimport schedule from '../../../data/Schedule.json';\nimport film from '../../../data/Film.json';\n\n// let userDayAndPlanKeys;\n// let filteredFilms;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst filterTimeAndDay = [];\nfunction filterScheduleAndExtractKeys(scheduleData) {\n  const filteredDay = scheduleData.filter(user => Object.keys(user.plan).some(time => user.plan[time] === false) //знаходимо дні, де є вільна година у користувача\n  );\n  // console.log(filteredDay)\n\n  function freeTime(obj) {\n    const arr = [];\n    for (let key in obj) {\n      if (obj[key] === false) {\n        arr.push([key]);\n      }\n    }\n    return arr;\n  }\n  for (let i = 0; i <= filteredDay.length - 1; i++) {\n    filterTimeAndDay.push({\n      day: filteredDay[i].day,\n      planKeys: freeTime(filteredDay[i].plan)\n    });\n  }\n  console.log(filterTimeAndDay);\n  return filterTimeAndDay;\n\n  // const filterPlan = scheduleData.map(plan => plan.plan);\n\n  //     const result = [];\n  //     console.log(filterPlan)\n\n  //     console.log(result);\n  //     const userDayAndPlanKeys = filteredDay.map(user => ({\n  //       day: user.day,\n  //       planKeys: Object.keys(user.plan)\n  //     }));\n  //     // console.log(userDayAndPlanKeys);\n\n  //     return userDayAndPlanKeys;\n}\n//   console.log(userDayAndPlanKeys);\nfilterScheduleAndExtractKeys(schedule);\nlet filteredFilms = [];\nfunction filterFilmsByDayAndTime(filmsData, userDayAndPlanKeys) {\n  co;\n  filmsData.map(film => {\n    for (let i = 0; i < userDayAndPlanKeys.length; i++) {\n      console.log(userDayAndPlanKeys[i].planKeys.includes(film.Date.time));\n      if (film.Date.day === userDayAndPlanKeys[i].day && userDayAndPlanKeys[i].planKeys.includes(film.Date.time)) {\n        filteredFilms.push(film);\n      }\n    }\n    return filteredFilms;\n  });\n  // return filteredFilms;\n}\n\nfilterFilmsByDayAndTime(film, filterTimeAndDay);\nconsole.log(filteredFilms);\nexport const Service = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"Service\",\n  children: filteredFilms.map(film => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: film.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: film.Images,\n      alt: \"img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 77,\n  columnNumber: 5\n}, this);\n_c = Service;\nvar _c;\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"names":["schedule","film","jsxDEV","_jsxDEV","Fragment","_Fragment","filterTimeAndDay","filterScheduleAndExtractKeys","scheduleData","filteredDay","filter","user","Object","keys","plan","some","time","freeTime","obj","arr","key","push","i","length","day","planKeys","console","log","filteredFilms","filterFilmsByDayAndTime","filmsData","userDayAndPlanKeys","co","map","includes","Date","Service","className","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","src","Images","alt","_c","$RefreshReg$"],"sources":["/Users/darina/Cinema-Trustee/cinema-trustee/src/components/main/service/Service.jsx"],"sourcesContent":["import schedule from '../../../data/Schedule.json';\nimport film from '../../../data/Film.json';\n\n// let userDayAndPlanKeys;\n// let filteredFilms;\n\nconst filterTimeAndDay = [];\n\nfunction filterScheduleAndExtractKeys(scheduleData) {\n    const filteredDay = scheduleData.filter(user =>\n      Object.keys(user.plan).some(time => user.plan[time] === false ) //знаходимо дні, де є вільна година у користувача\n    );\n    // console.log(filteredDay)\n\n    function freeTime (obj) {\n        const arr = [];\n        for(let key in obj) {\n            if (obj[key] === false) {\n                arr.push([key])\n            }\n        }\n        return arr;\n    }\n\n    for (let i = 0; i <= filteredDay.length - 1; i++) {\n        \n        filterTimeAndDay.push({\n            day: filteredDay[i].day,\n            planKeys: freeTime(filteredDay[i].plan)\n        })\n    }\n    console.log(filterTimeAndDay);\n\n\n    return filterTimeAndDay;\n\n    \n    // const filterPlan = scheduleData.map(plan => plan.plan);\n\n//     const result = [];\n//     console.log(filterPlan)\n\n    \n\n//     console.log(result);\n//     const userDayAndPlanKeys = filteredDay.map(user => ({\n//       day: user.day,\n//       planKeys: Object.keys(user.plan)\n//     }));\n//     // console.log(userDayAndPlanKeys);\n  \n//     return userDayAndPlanKeys;\n  }\n//   console.log(userDayAndPlanKeys);\n  filterScheduleAndExtractKeys(schedule)\n  let filteredFilms = [];\n  function filterFilmsByDayAndTime(filmsData, userDayAndPlanKeys) {\n    co\n    filmsData.map(film => {\n        for (let i = 0; i < userDayAndPlanKeys.length; i++) {\n            console.log(userDayAndPlanKeys[i].planKeys.includes(film.Date.time))\n            if (film.Date.day === userDayAndPlanKeys[i].day && userDayAndPlanKeys[i].planKeys.includes(film.Date.time)) {\n                filteredFilms.push(film)\n            }\n        }\n\n        return filteredFilms;\n    })\n    // return filteredFilms;\n  }\n  \n\n  filterFilmsByDayAndTime(film, filterTimeAndDay);\n     console.log(filteredFilms)\n\nexport const Service = () => (\n    <div className=\"Service\">\n        {filteredFilms.map(film => (\n            <>\n            <h1>{film.Title}</h1>\n            <img src={film.Images} alt=\"img\" />\n            </>\n            \n        ))}\n    </div>\n)\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,IAAI,MAAM,yBAAyB;;AAE1C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,gBAAgB,GAAG,EAAE;AAE3B,SAASC,4BAA4BA,CAACC,YAAY,EAAE;EAChD,MAAMC,WAAW,GAAGD,YAAY,CAACE,MAAM,CAACC,IAAI,IAC1CC,MAAM,CAACC,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIL,IAAI,CAACG,IAAI,CAACE,IAAI,CAAC,KAAK,KAAM,CAAC,CAAC;EAClE,CAAC;EACD;;EAEA,SAASC,QAAQA,CAAEC,GAAG,EAAE;IACpB,MAAMC,GAAG,GAAG,EAAE;IACd,KAAI,IAAIC,GAAG,IAAIF,GAAG,EAAE;MAChB,IAAIA,GAAG,CAACE,GAAG,CAAC,KAAK,KAAK,EAAE;QACpBD,GAAG,CAACE,IAAI,CAAC,CAACD,GAAG,CAAC,CAAC;MACnB;IACJ;IACA,OAAOD,GAAG;EACd;EAEA,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIb,WAAW,CAACc,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;IAE9ChB,gBAAgB,CAACe,IAAI,CAAC;MAClBG,GAAG,EAAEf,WAAW,CAACa,CAAC,CAAC,CAACE,GAAG;MACvBC,QAAQ,EAAER,QAAQ,CAACR,WAAW,CAACa,CAAC,CAAC,CAACR,IAAI;IAC1C,CAAC,CAAC;EACN;EACAY,OAAO,CAACC,GAAG,CAACrB,gBAAgB,CAAC;EAG7B,OAAOA,gBAAgB;;EAGvB;;EAEJ;EACA;;EAIA;EACA;EACA;EACA;EACA;EACA;;EAEA;AACE;AACF;AACEC,4BAA4B,CAACP,QAAQ,CAAC;AACtC,IAAI4B,aAAa,GAAG,EAAE;AACtB,SAASC,uBAAuBA,CAACC,SAAS,EAAEC,kBAAkB,EAAE;EAC9DC,EAAE;EACFF,SAAS,CAACG,GAAG,CAAChC,IAAI,IAAI;IAClB,KAAK,IAAIqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGS,kBAAkB,CAACR,MAAM,EAAED,CAAC,EAAE,EAAE;MAChDI,OAAO,CAACC,GAAG,CAACI,kBAAkB,CAACT,CAAC,CAAC,CAACG,QAAQ,CAACS,QAAQ,CAACjC,IAAI,CAACkC,IAAI,CAACnB,IAAI,CAAC,CAAC;MACpE,IAAIf,IAAI,CAACkC,IAAI,CAACX,GAAG,KAAKO,kBAAkB,CAACT,CAAC,CAAC,CAACE,GAAG,IAAIO,kBAAkB,CAACT,CAAC,CAAC,CAACG,QAAQ,CAACS,QAAQ,CAACjC,IAAI,CAACkC,IAAI,CAACnB,IAAI,CAAC,EAAE;QACxGY,aAAa,CAACP,IAAI,CAACpB,IAAI,CAAC;MAC5B;IACJ;IAEA,OAAO2B,aAAa;EACxB,CAAC,CAAC;EACF;AACF;;AAGAC,uBAAuB,CAAC5B,IAAI,EAAEK,gBAAgB,CAAC;AAC5CoB,OAAO,CAACC,GAAG,CAACC,aAAa,CAAC;AAE/B,OAAO,MAAMQ,OAAO,GAAGA,CAAA,kBACnBjC,OAAA;EAAKkC,SAAS,EAAC,SAAS;EAAAC,QAAA,EACnBV,aAAa,CAACK,GAAG,CAAChC,IAAI,iBACnBE,OAAA,CAAAE,SAAA;IAAAiC,QAAA,gBACAnC,OAAA;MAAAmC,QAAA,EAAKrC,IAAI,CAACsC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBxC,OAAA;MAAKyC,GAAG,EAAE3C,IAAI,CAAC4C,MAAO;MAACC,GAAG,EAAC;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACjC,CAEL;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CACR;AAAAI,EAAA,GAVYX,OAAO;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}