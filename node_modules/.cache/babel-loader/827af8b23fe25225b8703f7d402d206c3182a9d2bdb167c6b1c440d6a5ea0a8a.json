{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Cinema-Trustee/cinema-trustee/src/components/main/Row.jsx\";\n// export const Row = (\n//     time,\n//     planForMonday = 0,\n//     planForTuesday = 0,\n//     planForWednesday = 0,\n//     planForThursday = 0,\n//     planForFriday = 0,\n//     planForSaturday = 0,\n//     planForSunday = 0\n//     ) => (\n//     <tr>\n//             <td>{time}</td>\n//             <td>{planForMonday}</td>\n//             <td>{planForTuesday}</td>\n//             <td>{planForWednesday}</td>\n//             <td>{planForThursday}</td>\n//             <td>{planForFriday}</td>\n//             <td>{planForSaturday}</td>\n//             <td>{planForSunday}</td>\n//     </tr>\n// )\n\nimport React from 'react';\nimport schedule from '../../data/Schedule.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const WeeklySchedule = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0413\\u0440\\u0430\\u0444\\u0456\\u043A \\u0442\\u0438\\u0436\\u043D\\u044F \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u0414\\u0435\\u043D\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), schedule.map(user => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: Object.keys(user.plan).map(time => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: user.plan[time]\n            }, time, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this))\n          }, void 0, false))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: schedule.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), Object.keys(user.plan).map(time => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.plan[time]\n          }, time, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this))]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = WeeklySchedule;\nvar _c;\n$RefreshReg$(_c, \"WeeklySchedule\");","map":{"version":3,"names":["React","schedule","jsxDEV","_jsxDEV","Fragment","_Fragment","WeeklySchedule","children","fileName","_jsxFileName","lineNumber","columnNumber","map","user","Object","keys","plan","time","day","id","_c","$RefreshReg$"],"sources":["/Users/darina/Cinema-Trustee/cinema-trustee/src/components/main/Row.jsx"],"sourcesContent":["\n// export const Row = (\n//     time,\n//     planForMonday = 0,\n//     planForTuesday = 0,\n//     planForWednesday = 0,\n//     planForThursday = 0,\n//     planForFriday = 0,\n//     planForSaturday = 0,\n//     planForSunday = 0\n//     ) => (\n//     <tr>\n//             <td>{time}</td>\n//             <td>{planForMonday}</td>\n//             <td>{planForTuesday}</td>\n//             <td>{planForWednesday}</td>\n//             <td>{planForThursday}</td>\n//             <td>{planForFriday}</td>\n//             <td>{planForSaturday}</td>\n//             <td>{planForSunday}</td>\n//     </tr>\n// )\n\nimport React from 'react';\nimport schedule from '../../data/Schedule.json';\n\nexport const WeeklySchedule = () => {\n    return (\n        <div>\n            <h2>Графік тижня користувача</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>День</th>\n                        {schedule.map((user) => (\n                           <>\n                           {Object.keys(user.plan).map((time) => (\n                                <th key={time}>{user.plan[time]}</th>\n                            ))}\n                           </>\n                            \n                    ))}\n                        {/* <th>10:00</th>\n                        <th>11:00</th>\n                        <th>12:00</th>\n                        <th>13:00</th>\n                        <th>14:00</th>\n                        <th>15:00</th>\n                        <th>16:00</th>\n                        <th>17:00</th>\n                        <th>18:00</th>\n                        <th>19:00</th>\n                        <th>20:00</th> */}\n                    </tr>\n                </thead>\n                <tbody>\n                    {schedule.map((user) => (\n                        <tr key={user.id}>\n                            <td>{user.day}</td>\n                            {Object.keys(user.plan).map((time) => (\n                                <td key={time}>{user.plan[time]}</td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n"],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAChC,oBACIH,OAAA;IAAAI,QAAA,gBACIJ,OAAA;MAAAI,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCR,OAAA;MAAAI,QAAA,gBACIJ,OAAA;QAAAI,QAAA,eACIJ,OAAA;UAAAI,QAAA,gBACIJ,OAAA;YAAAI,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACZV,QAAQ,CAACW,GAAG,CAAEC,IAAI,iBAChBV,OAAA,CAAAE,SAAA;YAAAE,QAAA,EACCO,MAAM,CAACC,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,CAACJ,GAAG,CAAEK,IAAI,iBAC5Bd,OAAA;cAAAI,QAAA,EAAgBM,IAAI,CAACG,IAAI,CAACC,IAAI;YAAC,GAAtBA,IAAI;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAuB,CACvC;UAAC,gBACD,CAER,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRR,OAAA;QAAAI,QAAA,EACKN,QAAQ,CAACW,GAAG,CAAEC,IAAI,iBACfV,OAAA;UAAAI,QAAA,gBACIJ,OAAA;YAAAI,QAAA,EAAKM,IAAI,CAACK;UAAG;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAClBG,MAAM,CAACC,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,CAACJ,GAAG,CAAEK,IAAI,iBAC7Bd,OAAA;YAAAI,QAAA,EAAgBM,IAAI,CAACG,IAAI,CAACC,IAAI;UAAC,GAAtBA,IAAI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAuB,CACvC,CAAC;QAAA,GAJGE,IAAI,CAACM,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKZ,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAAAS,EAAA,GA1CYd,cAAc;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}