{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Cinema-Trustee/cinema-trustee/src/components/main/service/Service.jsx\";\nimport schedule from '../../../data/Schedule.json';\nimport film from '../../../data/Film.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet userDayAndPlanKeys;\nlet filteredFilms;\nfunction filterScheduleAndExtractKeys(scheduleData) {\n  const filteredUsers = scheduleData.filter(user => Object.keys(user.plan).some(time => user.plan[time] === false));\n  userDayAndPlanKeys = filteredUsers.map(user => ({\n    day: user.day,\n    planKeys: Object.keys(user.plan)\n  }));\n  return userDayAndPlanKeys;\n}\ncon;\nfilterScheduleAndExtractKeys(schedule);\nfunction filterFilmsByDayAndTime(filmsData, userDayAndPlanKeys) {\n  filteredFilms = filmsData.filter(movie => userDayAndPlanKeys.some(user => movie.Date.day === user.day && user.planKeys.includes(movie.Date.time)));\n  return filteredFilms;\n}\nfilterFilmsByDayAndTime(film, userDayAndPlanKeys);\nconsole.log(filteredFilms);\nexport const Service = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"Service\",\n  children: filteredFilms.map(film => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: film.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: film.Images,\n      alt: \"img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 5\n}, this);\n_c = Service;\nvar _c;\n$RefreshReg$(_c, \"Service\");","map":{"version":3,"names":["schedule","film","jsxDEV","_jsxDEV","Fragment","_Fragment","userDayAndPlanKeys","filteredFilms","filterScheduleAndExtractKeys","scheduleData","filteredUsers","filter","user","Object","keys","plan","some","time","map","day","planKeys","con","filterFilmsByDayAndTime","filmsData","movie","Date","includes","console","log","Service","className","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","src","Images","alt","_c","$RefreshReg$"],"sources":["/Users/darina/Cinema-Trustee/cinema-trustee/src/components/main/service/Service.jsx"],"sourcesContent":["import schedule from '../../../data/Schedule.json';\nimport film from '../../../data/Film.json';\n\nlet userDayAndPlanKeys;\nlet filteredFilms;\n\nfunction filterScheduleAndExtractKeys(scheduleData) {\n    const filteredUsers = scheduleData.filter(user =>\n      Object.keys(user.plan).some(time => user.plan[time] === false )\n    );\n  \n    userDayAndPlanKeys = filteredUsers.map(user => ({\n      day: user.day,\n      planKeys: Object.keys(user.plan)\n    }));\n  \n    return userDayAndPlanKeys;\n  }\n  con\n  filterScheduleAndExtractKeys(schedule)\n\n  function filterFilmsByDayAndTime(filmsData, userDayAndPlanKeys) {\n    filteredFilms = filmsData.filter(movie =>\n      userDayAndPlanKeys.some(user =>\n        movie.Date.day === user.day && user.planKeys.includes(movie.Date.time)\n      )\n    );\n  \n    return filteredFilms;\n  }\n  \n\n  filterFilmsByDayAndTime(film, userDayAndPlanKeys);\n     console.log(filteredFilms)\n\nexport const Service = () => (\n    <div className=\"Service\">\n        {/* <h2>435</h2> */}\n        {filteredFilms.map(film => (\n            <>\n            <h1>{film.Title}</h1>\n            <img src={film.Images} alt=\"img\" />\n            </>\n            \n        ))}\n    </div>\n)\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,6BAA6B;AAClD,OAAOC,IAAI,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3C,IAAIC,kBAAkB;AACtB,IAAIC,aAAa;AAEjB,SAASC,4BAA4BA,CAACC,YAAY,EAAE;EAChD,MAAMC,aAAa,GAAGD,YAAY,CAACE,MAAM,CAACC,IAAI,IAC5CC,MAAM,CAACC,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIL,IAAI,CAACG,IAAI,CAACE,IAAI,CAAC,KAAK,KAAM,CAChE,CAAC;EAEDX,kBAAkB,GAAGI,aAAa,CAACQ,GAAG,CAACN,IAAI,KAAK;IAC9CO,GAAG,EAAEP,IAAI,CAACO,GAAG;IACbC,QAAQ,EAAEP,MAAM,CAACC,IAAI,CAACF,IAAI,CAACG,IAAI;EACjC,CAAC,CAAC,CAAC;EAEH,OAAOT,kBAAkB;AAC3B;AACAe,GAAG;AACHb,4BAA4B,CAACR,QAAQ,CAAC;AAEtC,SAASsB,uBAAuBA,CAACC,SAAS,EAAEjB,kBAAkB,EAAE;EAC9DC,aAAa,GAAGgB,SAAS,CAACZ,MAAM,CAACa,KAAK,IACpClB,kBAAkB,CAACU,IAAI,CAACJ,IAAI,IAC1BY,KAAK,CAACC,IAAI,CAACN,GAAG,KAAKP,IAAI,CAACO,GAAG,IAAIP,IAAI,CAACQ,QAAQ,CAACM,QAAQ,CAACF,KAAK,CAACC,IAAI,CAACR,IAAI,CACvE,CACF,CAAC;EAED,OAAOV,aAAa;AACtB;AAGAe,uBAAuB,CAACrB,IAAI,EAAEK,kBAAkB,CAAC;AAC9CqB,OAAO,CAACC,GAAG,CAACrB,aAAa,CAAC;AAE/B,OAAO,MAAMsB,OAAO,GAAGA,CAAA,kBACnB1B,OAAA;EAAK2B,SAAS,EAAC,SAAS;EAAAC,QAAA,EAEnBxB,aAAa,CAACW,GAAG,CAACjB,IAAI,iBACnBE,OAAA,CAAAE,SAAA;IAAA0B,QAAA,gBACA5B,OAAA;MAAA4B,QAAA,EAAK9B,IAAI,CAAC+B;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBjC,OAAA;MAAKkC,GAAG,EAAEpC,IAAI,CAACqC,MAAO;MAACC,GAAG,EAAC;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACjC,CAEL;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CACR;AAAAI,EAAA,GAXYX,OAAO;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}